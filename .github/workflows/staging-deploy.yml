name: "ðŸŽ¬ Deployment to Staging Enviornment"

permissions: read-all

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-staging"

env:
  tf_version: "1.5.7"
  tg_version: "0.48.0"
  working_dir: "environment/staging"
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.0.0
        with:
          ref: ${{ github.ref.tags }}

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v1.0.8
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"

  plan:
    runs-on: ubuntu-latest
    needs: [checks]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.0.0
        with:
          ref: ${{ github.ref.tags }}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v1.0.8
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all plan"

  deploy:
    runs-on: ubuntu-latest
    needs: [plan]
    environment: "staging"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4.0.0
        with:
          ref: ${{ github.ref.tags }}

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v1.0.8
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all apply"
